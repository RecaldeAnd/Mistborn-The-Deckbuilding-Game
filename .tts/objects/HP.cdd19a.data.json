{
  "GUID": "cdd19a",
  "Name": "Custom_Tile",
  "Transform": {
    "posX": -21.2484188,
    "posY": 0.9600001,
    "posZ": 16.758007,
    "rotX": -6.96215139e-8,
    "rotY": 179.975357,
    "rotZ": -2.26672476e-8,
    "scaleX": 0.5,
    "scaleY": 1,
    "scaleZ": 0.5
  },
  "Nickname": "HP",
  "Description": "",
  "GMNotes": "",
  "AltLookAngle": {
    "x": 0,
    "y": 0,
    "z": 0
  },
  "ColorDiffuse": {
    "r": 0.5,
    "g": 0.5,
    "b": 0.5
  },
  "LayoutGroupSortIndex": 0,
  "Value": 0,
  "Locked": false,
  "Grid": true,
  "Snap": true,
  "IgnoreFoW": false,
  "MeasureMovement": false,
  "DragSelectable": true,
  "Autoraise": true,
  "Sticky": true,
  "Tooltip": false,
  "GridProjection": false,
  "HideWhenFaceDown": false,
  "Hands": false,
  "CustomImage": {
    "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/943965591833757913/29EFDCF4395204E2CF84B7C15F3736203AD9E5C9/",
    "ImageSecondaryURL": "",
    "ImageScalar": 1,
    "WidthScale": 0,
    "CustomTile": {
      "Type": 3,
      "Thickness": 0.1,
      "Stackable": false,
      "Stretch": true
    }
  },
  "LuaScript": "-- Universal Counter Tokens      original coded by: MrStump\r\n-- Scale and position adapted by kensuaga\r\n\r\n--Center positions for the buttons\r\n    posX = -0.05\r\n    posY = 0.125\r\n    posZ = 0.03\r\n\r\n--Scale of the buttons\r\n    scale1 = 0.65\r\n    scale2 = 0.8\r\n\r\n\r\n\r\n-- Do not change anything below these line unless you know what you are doing.\r\n\r\n--Saves the count value into a table (data_to_save) then encodes it into the Tabletop save\r\nfunction onSave()\r\n    local data_to_save = {saved_count = count}\r\n    saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\n--Loads the saved data then creates the buttons\r\nfunction onload(saved_data)\r\n    generateButtonParamiters()\r\n    --Checks if there is a saved data. If there is, it gets the saved value for 'count'\r\n    if saved_data != '' then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        count = loaded_data.saved_count\r\n    else\r\n        --If there wasn't saved data, the default value is set to 10.\r\n        count = 0\r\n    end\r\n\r\n    --Generates the buttons after putting the count value onto the 'display' button\r\n    b_display.label = tostring(count)\r\n    if count >= 100 then\r\n        b_display.font_size = 360\r\n    else\r\n        b_display.font_size = 500\r\n    end\r\n    self.createButton(b_display)\r\n    self.createButton(b_plus)\r\n    self.createButton(b_minus)\r\n    self.createButton(b_plus5)\r\n    self.createButton(b_minus5)\r\nend\r\n\r\n--Activates when + is hit. Adds 1 to 'count' then updates the display button.\r\nfunction increase()\r\n    count = count + 1\r\n    updateDisplay()\r\nend\r\n\r\n--Activates when - is hit. Subtracts 1 from 'count' then updates the display button.\r\nfunction decrease()\r\n    --Prevents count from going below 0\r\n    if count > 0 then\r\n        count = count - 1\r\n        updateDisplay()\r\n    end\r\nend\r\n\r\n--Activates when + is hit. Adds 5 to 'count' then updates the display button.\r\nfunction increase5()\r\n    count = count + 5\r\n    updateDisplay()\r\nend\r\n\r\n--Activates when - is hit. Subtracts 5 from 'count' then updates the display button.\r\nfunction decrease5()\r\n    --Prevents count from going below 0\r\n    if count > 4 then\r\n        count = count - 5\r\n    else\r\n        count = 0\r\n    end\r\n    updateDisplay()\r\nend\r\n\r\nfunction resetTo50()\r\n    count = 50\r\n    updateDisplay()\r\nend\r\n\r\nfunction customSet()\r\n    local description = self.getDescription()\r\n    if description != '' and type(tonumber(description)) == 'number' then\r\n        self.setDescription('')\r\n        count = tonumber(description)\r\n        updateDisplay()\r\n    end\r\nend\r\n\r\n--function that updates the display. I trigger it whenever I change 'count'\r\nfunction updateDisplay()\r\n    --If statement to resize font size if it gets too long\r\n    if count >= 100 then\r\n        b_display.font_size = 360\r\n    else\r\n        b_display.font_size = 500\r\n    end\r\n    b_display.label = tostring(count)\r\n    self.editButton(b_display)\r\nend\r\n\r\n\r\n\r\n--This is activated when onload runs. This sets all paramiters for our buttons.\r\n--I do not have to put this all into a function, but I prefer to do it this way.\r\nfunction generateButtonParamiters()\r\n    b_display = {\r\n        index = 0, click_function = 'customSet', function_owner = self, label = '00',\r\n        position = {posX, posY, posZ}, width = 0, height = 0, font_size = 500,\r\n        font_color = {1,1,1}, scale = {scale1,scale1,scale1}\r\n    }\r\n    b_plus = {\r\n        click_function = 'increase', function_owner = self, label =  '+1',\r\n        position = {posX + 0.9*scale2, posY, posZ + 0.26*scale2},\r\n        width = 175, height = 300, font_size = 100, scale = {scale2,scale2,scale2}\r\n    }\r\n    b_minus = {\r\n        click_function = 'decrease', function_owner = self, label =  '-1',\r\n        position = {posX + -0.9*scale2, posY, posZ + 0.26*scale2},\r\n        width = 175, height = 300, font_size = 100, scale = {scale2,scale2,scale2}\r\n    }\r\n    b_plus5 = {\r\n        click_function = 'increase5', function_owner = self, label =  '+5',\r\n        position = {posX + 0.9*scale2, posY, posZ + -0.29*scale2},\r\n        width = 175, height = 230, font_size = 100, scale = {scale2,scale2,scale2}\r\n    }\r\n    b_minus5 = {\r\n        click_function = 'decrease5', function_owner = self, label =  '-5',\r\n        position = {posX + -0.9*scale2, posY, posZ + -0.29*scale2},\r\n        width = 175, height = 230, font_size = 100, scale = {scale2,scale2,scale2}\r\n    }\r\nend\r\n",
  "LuaScriptState": "{\"saved_count\":50}",
  "XmlUI": ""
}