{
  "GUID": "52e800",
  "Name": "Custom_Token",
  "Transform": {
    "posX": -25.3848724,
    "posY": 1.06,
    "posZ": 13.5639954,
    "rotX": -9.154739e-8,
    "rotY": 180,
    "rotZ": 1.67577682e-7,
    "scaleX": 0.6713847,
    "scaleY": 1,
    "scaleZ": 0.6713847
  },
  "Nickname": "Marsh Health Tracker",
  "Description": "",
  "GMNotes": "",
  "AltLookAngle": {
    "x": 0,
    "y": 0,
    "z": 0
  },
  "ColorDiffuse": {
    "r": 1,
    "g": 1,
    "b": 1
  },
  "Tags": [
    "Health Tracker"
  ],
  "LayoutGroupSortIndex": 0,
  "Value": 0,
  "Locked": true,
  "Grid": true,
  "Snap": true,
  "IgnoreFoW": false,
  "MeasureMovement": false,
  "DragSelectable": true,
  "Autoraise": true,
  "Sticky": true,
  "Tooltip": true,
  "GridProjection": false,
  "HideWhenFaceDown": false,
  "Hands": false,
  "CustomImage": {
    "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/12823999279358307150/9FCA7B2CD10B4ECF1EF523AD66C16D8BF523F356/",
    "ImageSecondaryURL": "",
    "ImageScalar": 1,
    "WidthScale": 0,
    "CustomToken": {
      "Thickness": 0.2,
      "MergeDistancePixels": 25,
      "StandUp": false,
      "Stackable": false
    }
  },
  "LuaScript": "-- Universal Counter Tokens      starter code by: MrStump\r\n-- Scale and position adapted by kensuaga\r\n\r\n--Center positions for the buttons\r\n    posX = 0.02;\r\n    posY = 0.1;\r\n    posZ = 0.03;\r\n\r\n--Scale of the buttons\r\n    scale1 = 0.65;\r\n    scale2 = 1.75;\r\n\r\n\r\n\r\n-- Do not change anything below these line unless you know what you are doing.\r\n\r\n--Saves the count value into a table (data_to_save) then encodes it into the Tabletop save\r\nfunction onSave()\r\n    local data_to_save = {saved_count = count};\r\n    saved_data = JSON.encode(data_to_save);\r\n    return saved_data;\r\nend\r\n\r\n--Loads the saved data then creates the buttons\r\nfunction onload(saved_data)\r\n    generateButtonParamiters();\r\n    --Checks if there is a saved data. If there is, it gets the saved value for 'count'\r\n    if saved_data != '' then\r\n        local loaded_data = JSON.decode(saved_data);\r\n        count = loaded_data.saved_count;\r\n    else\r\n        --If there wasn't saved data, the default value is set to default starter health 36.\r\n        count = 36;\r\n    end\r\n\r\n    --Generates the buttons after putting the count value onto the 'display' button\r\n    self.createButton(b_display_digit_1);\r\n    self.createButton(b_display_digit_2);\r\n    self.createButton(b_plus);\r\n    self.createButton(b_minus);\r\n    self.createButton(b_plus5);\r\n    self.createButton(b_minus5);\r\n    updateDisplay();\r\nend\r\n\r\n--Activates when + is hit. Adds 1 to 'count' then updates the display button.\r\nfunction increase()\r\n    count = count + 1;\r\n    updateDisplay();\r\nend\r\n\r\n--Activates when - is hit. Subtracts 1 from 'count' then updates the display button.\r\nfunction decrease()\r\n    --Prevents count from going below 0\r\n    count = count - 1;\r\n    updateDisplay();\r\nend\r\n\r\n--Activates when + is hit. Adds 5 to 'count' then updates the display button.\r\nfunction increase5()\r\n    count = count + 5;\r\n    updateDisplay();\r\nend\r\n\r\n--Activates when - is hit. Subtracts 5 from 'count' then updates the display button.\r\nfunction decrease5()\r\n    --Prevents count from going below 0\r\n    count = count - 5;\r\n    updateDisplay();\r\nend\r\n\r\nfunction get_digits_from_count()\r\n    local second_digit = count % 10;\r\n    local first_digit  = math.floor(count / 10);\r\n\r\n    return first_digit, second_digit;\r\nend\r\n\r\n-- This actually is not set to execute since the button associated with \r\n-- this has a width and height of 0\r\nfunction customSet()\r\n    local description   = self.getDescription();\r\n    local health_number = string.sub(description, 8);\r\n    if description != '' and type(tonumber(description)) == 'number' then\r\n        count = tonumber(description);\r\n        updateDisplay();\r\n        return;\r\n    end\r\n\r\n    if health_number != '' and type(tonumber(health_number)) == 'number' then\r\n        count = tonumber(health_number);\r\n        updateDisplay();\r\n        return;\r\n    end\r\nend\r\n\r\n--function that updates the display. I trigger it whenever I change 'count'\r\nfunction updateDisplay()\r\n    -- Max Health in game is 40, run check and set value here\r\n    -- since this is always called\r\n    if count > 40 then\r\n        count = 40;\r\n    end\r\n\r\n    if count < 0 then\r\n        count = 0;\r\n    end\r\n\r\n    local digit_1, digit_2 = get_digits_from_count();\r\n\r\n    b_display_digit_1.label = tostring(digit_1);\r\n    b_display_digit_2.label = tostring(digit_2);\r\n    self.editButton(b_display_digit_1);\r\n    self.editButton(b_display_digit_2);\r\n    -- useful if customSet function comes into use\r\n    -- self.setDescription(\"Health: \" .. tostring(count));\r\nend\r\n\r\n\r\n\r\n--This is activated when onload runs. This sets all paramiters for our buttons.\r\n--I do not have to put this all into a function, but I prefer to do it this way.\r\nfunction generateButtonParamiters()\r\n    b_display_digit_1 = {\r\n        index = 1, click_function = 'customSet', function_owner = self, label = '3',\r\n        position = {posX - 0.35, posY, posZ}, width = 0, height = 0, font_size = 500,\r\n        font_color = {1,1,1}, scale = {scale1,scale1,scale1}\r\n    };\r\n    b_display_digit_2 = {\r\n        index = 0, click_function = 'customSet', function_owner = self, label = '6',\r\n        position = {posX + 0.35, posY, posZ}, width = 0, height = 0, font_size = 500,\r\n        font_color = {1,1,1}, scale = {scale1,scale1,scale1}\r\n    };\r\n    b_plus = {\r\n        click_function = 'increase', function_owner = self, label =  '+1',\r\n        position = {posX + 0.9*scale2, posY, posZ + 0.26*scale2},\r\n        width = 175, height = 300, font_size = 100, scale = {scale2,scale2,scale2}\r\n    };\r\n    b_minus = {\r\n        click_function = 'decrease', function_owner = self, label =  '-1',\r\n        position = {posX + -0.9*scale2, posY, posZ + 0.26*scale2},\r\n        width = 175, height = 300, font_size = 100, scale = {scale2,scale2,scale2}\r\n    };\r\n    b_plus5 = {\r\n        click_function = 'increase5', function_owner = self, label =  '+5',\r\n        position = {posX + 0.9*scale2, posY, posZ + -0.29*scale2},\r\n        width = 175, height = 230, font_size = 100, scale = {scale2,scale2,scale2}\r\n    };\r\n    b_minus5 = {\r\n        click_function = 'decrease5', function_owner = self, label =  '-5',\r\n        position = {posX + -0.9*scale2, posY, posZ + -0.29*scale2},\r\n        width = 175, height = 230, font_size = 100, scale = {scale2,scale2,scale2}\r\n    }\r\nend\r\n",
  "LuaScriptState": "{\"saved_count\":36}",
  "XmlUI": ""
}